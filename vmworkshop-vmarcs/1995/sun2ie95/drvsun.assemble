        TITLE ' Revolving of bytes in double words of SUN data '                
* --------------------------------------------------------------------*         
*      subroutine drvsun(from, to, n)                                 *         
*      integer n                                                      *         
*      double precision from(n), to(n)                                *         
* --------------------------------------------------------------------*         
* PROCESSOR    - ASSEMBLE H, VERSION 2, RELEASE 1.                    *         
*                                                                     *         
* DEPENDENCES  - NONE                                                 *         
*                                                                     *         
* ATTRIBUTES   - REENTERANT                                           *         
*                                                                     *         
* ENTRY POINT  - DRVSUN: Double word's bytes ReVersing in SUN 386i's  *         
*                        data.                                        *         
*                                                                     *         
* STATUS       - NEW: 05/17/90                                        *         
*                                                                     *         
*                            Val I. Garger, Technology Integration    *         
*                            Group, CNSF, Cornell University          *         
*                                                                     *         
*                               vig@cornellf.tn.cornell.edu           *         
*                               vig@eagle.tn.cornell.edu              *         
*                               vig@cornellf.bitnet                   *         
*-------------------------------------------------------------------- *         
*                                                                     *         
*  COPYRIGHT -  VAL GARGER, CORNELL NATIONAL SUPERCOMPUTER FACILITY,  *         
*               (JUNE 1990) CORNELL UNIVERSITY, ITHACA, NY.           *         
*               CONTAINS RESTRICTED MATERIALS OF CORNELL UNIVERSITY,  *         
*               (C) COPYRIGHT CORNELL UNIVERSITY 1990                 *         
*                                                                     *         
* --------------------------------------------------------------------*         
* Reversing of bytes in double words in SUN 386i workstation data.    *         
* This is to further use of SUN's data FTPed to any other computer as *         
* regular IEEE format  data.                                          *         
*                                                                     *         
*     input: from  SUN array of double words.                         *         
*            n     Number of double words to revolve.                 *         
*    output: to    regular IEEE double words (like real*8).           *         
*                                                                     *         
* The result of reversing is an array of double words which can be    *         
* used in any further computation as a regular IEEE code.             *         
*                                                                     *         
* The fact is that SUN 368i keeps every single data element           *         
* (integer, logical, and real*4 in words and real*8 in double words)  *         
* in bytes "from higher addresses to lower addresses" which is        *         
* opposite to many other computers.                                   *         
*                                                                     *         
* Usage notes:                                                        *         
*                                                                     *         
*         1. Input and output data could be located at the same space.*         
*         2. Twice reversed data return to their source.              *         
*-------------------------------------------------------------------- *         
_drvsun_ csect                                                                  
       entry      _drvsun_                                                      
       b          34(,15)                                                       
       dc         al1(6+22)                                                     
       dc         cl6'drvsun'                                                   
       dc         cl22'05-01-90/vesion#1.7'                                     
       stm        2,15,x'10'(13)                                                
       lr         12,13                                                         
       la         11,x'68'                                                      
       slr        13,11                                                         
       st         12,4(13)                                                      
       lr         12,15                                                         
       using      _drvsun_,12                                                   
r0     equ   0                   symbolic register equates                      
r1     equ   1                                                                  
r2     equ   2                                                                  
r3     equ   3                                                                  
r4     equ   4                                                                  
r5     equ   5                                                                  
r6     equ   6                                                                  
r7     equ   7                                                                  
r8     equ   8                                                                  
r9     equ   9                                                                  
r10    equ   10                                                                 
r11    equ   11                                                                 
r12    equ   12                                                                 
r13    equ   13                                                                 
r14    equ   14                                                                 
r15    equ   15                                                                 
* -------------------------- b o d y ------------                               
       lr    r4,r2                                                              
       lr    r3,r1                                                              
       lr    r2,r0                                                              
       l     r11,00(,r4)             if (n == 0) go to exit                     
       ltr   r9,r11                                                             
       bz    exit                                                               
next   ds    0h                                                                 
       ic    r5,03(,r2)              load the last byte of the word             
       sll   r5,8                    0040                                       
       ic    r5,02(,r2)              0043                                       
       sll   r5,8                    0430                                       
       ic    r5,01(,r2)              0432                                       
       sll   r5,8                    4320                                       
       ic    r5,00(,r2)              4321                                       
*                                                                               
       ic    r4,07(,r2)              load the last byte of the word             
       sll   r4,8                    0080                                       
       ic    r4,06(,r2)              0087                                       
       sll   r4,8                    0870                                       
       ic    r4,05(,r2)              0876                                       
       sll   r4,8                    8760                                       
       ic    r4,04(,r2)              8765                                       
*                                                                               
       stm   r4,r5,00(r3)            save the first as a second one             
       la    r2,8(r2)                                                           
       la    r3,8(r3)                                                           
       bct   11,next                                                            
* --------- epiloge -----------------------------------------------             
exit   lm         2,14,x'78'(13)                                                
       br         14                                                            
       end                                                                      